class Basket {
	
	field int x, y;
	field int size;
	field int moveSpeed;
	field int basketDiff; // impacts the shape of the basket
	
   /** Constructs a new basket with a given location. */
	constructor Basket new(int Ax, int Ay) {
      let x = Ax;
	  let y = Ay;
	  let size = 10;
	  let moveSpeed = 10;
	  let basketDiff = 3;
	  do draw();
	  return this;
   }
	
	method int getX() {
	return x;
	}
	
	method int getY() {
	return y;
	}
	
	method void dispose() {
      do Memory.deAlloc(this);
      return;
   }
   
	method void draw() {
	do Screen.setColor(true);
    do Screen.drawRectangle(x, y, x+50, y+5);
    do Screen.drawRectangle(x+basketDiff, y+5, x+50 - basketDiff, y+10);
    do Screen.drawRectangle(x + Math.multiply(2,basketDiff), y+10, x+50 - Math.multiply(2,basketDiff), y+15);
    do Screen.drawRectangle(x+ Math.multiply(3,basketDiff), y+15, x+50 - Math.multiply(3,basketDiff), y+20);
    do Screen.drawRectangle(x+ Math.multiply(4,basketDiff), y+20, x+50 - Math.multiply(4,basketDiff), y+25);
	return;

   }
	
	method void erase() {
	var int memAddress;
	do Screen.setColor(false);
    do Screen.drawRectangle(x, y, x+50, y+5);
    do Screen.drawRectangle(x+basketDiff, y+5, x+50 - basketDiff, y+10);
    do Screen.drawRectangle(x + Math.multiply(2,basketDiff), y+10, x+50 - Math.multiply(2,basketDiff), y+15);
    do Screen.drawRectangle(x+ Math.multiply(3,basketDiff), y+15, x+50 - Math.multiply(3,basketDiff), y+20);
    do Screen.drawRectangle(x+ Math.multiply(4,basketDiff), y+20, x+50 - Math.multiply(4,basketDiff), y+25);
	
	return;

   }   
   
   method void moveLeft() {
      if (x > 1) {
        do Screen.setColor(false);
        do Screen.drawRectangle(x+(50-moveSpeed), y, x+50, y+5);
		do Screen.drawRectangle(x+(50-Math.multiply(1,basketDiff)-moveSpeed), y+5, x+50-Math.multiply(1,basketDiff), y+10);
		do Screen.drawRectangle(x+(50-Math.multiply(2,basketDiff)-moveSpeed), y+10, x+50-Math.multiply(2,basketDiff), y+15);
		do Screen.drawRectangle(x+(50-Math.multiply(3,basketDiff)-moveSpeed), y+15, x+50-Math.multiply(3,basketDiff), y+20);
		do Screen.drawRectangle(x+(50-Math.multiply(4,basketDiff)-moveSpeed), y+20, x+50-Math.multiply(4,basketDiff), y+25);
		let x = x - moveSpeed;
        do Screen.setColor(true);
		do Screen.drawRectangle(x, y, x + moveSpeed, y+5);
		do Screen.drawRectangle(x+Math.multiply(1,basketDiff), y+5, x + Math.multiply(1,basketDiff) + moveSpeed, y+10);
		do Screen.drawRectangle(x+Math.multiply(2,basketDiff), y+10, x + Math.multiply(2,basketDiff) + moveSpeed, y+15);
		do Screen.drawRectangle(x+Math.multiply(3,basketDiff), y+15, x + Math.multiply(3,basketDiff) + moveSpeed, y+20);
		do Screen.drawRectangle(x+Math.multiply(4,basketDiff), y+20, x + Math.multiply(4,basketDiff) + moveSpeed, y+25);
      }
      return;
   }

   method void moveRight() {
      if ((x + 50) < 510) {
		do Screen.setColor(false);
        do Screen.drawRectangle(x, y, x + moveSpeed, y+5);
		do Screen.drawRectangle(x+Math.multiply(1,basketDiff), y+5, x + Math.multiply(1,basketDiff) + moveSpeed, y+10);
		do Screen.drawRectangle(x+Math.multiply(2,basketDiff), y+10, x + Math.multiply(2,basketDiff) + moveSpeed, y+15);
		do Screen.drawRectangle(x+Math.multiply(3,basketDiff), y+15, x + Math.multiply(3,basketDiff) + moveSpeed, y+20);
		do Screen.drawRectangle(x+Math.multiply(4,basketDiff), y+20, x + Math.multiply(4,basketDiff) + moveSpeed, y+25);
		let x = x + moveSpeed;
        do Screen.setColor(true);
		do Screen.drawRectangle(x+(50-moveSpeed), y, x+50, y+5);
		do Screen.drawRectangle(x+(50-Math.multiply(1,basketDiff)-moveSpeed), y+5, x+50-Math.multiply(1,basketDiff), y+10);
		do Screen.drawRectangle(x+(50-Math.multiply(2,basketDiff)-moveSpeed), y+10, x+50-Math.multiply(2,basketDiff), y+15);
		do Screen.drawRectangle(x+(50-Math.multiply(3,basketDiff)-moveSpeed), y+15, x+50-Math.multiply(3,basketDiff), y+20);
		do Screen.drawRectangle(x+(50-Math.multiply(4,basketDiff)-moveSpeed), y+20, x+50-Math.multiply(4,basketDiff), y+25);
      }
      return;
   }
   
   method void blink() {
		do erase();
		do Sys.wait(15);
		do draw();
		do Sys.wait(15);
		do erase();
		do Sys.wait(15);
		do draw();
		do Sys.wait(15);
		do erase();
		do Sys.wait(15);
		do draw();
		do Sys.wait(15);
		do erase();
		do Sys.wait(15);
		do draw();
		do Sys.wait(15);
		do erase();
		do Sys.wait(15);
		do draw();
		return;
	}
	
	method int getDiff(){
		return basketDiff;
		}
}
