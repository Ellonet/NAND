// push constant 17000
@17000
D=A
@SP
AM=M+1
A=A-1
M=D
// push constant 17001
@17001
D=A
@SP
AM=M+1
A=A-1
M=D
// lt
@SP
AM=M-1
D=M
@NEG_Y_1
D;JLT
@SP
A=M-1
D=M
@NEG_X_POS_Y_1
D;JLT
@SP
A=M
D=M
A=A-1
D=M-D
@LOWER_1
D;JLT
@GREATER_1
0;JMP
(NEG_Y_1)
@SP
A=M-1
D=M
@NEG_Y_POS_X_1
D;JGT
@SP
A=M
D=M
A=A-1
D=M-D
@LOWER_1
D;JGT
@GREATER_1
0;JMP
(NEG_X_POS_Y_1)
@LOWER_1
0;JMP
(NEG_Y_POS_X_1)
@GREATER_1
0;JMP
(GREATER_1)
@SP
A=M-1
M=0
@END_1
0;JMP
(LOWER_1)
@SP
A=M-1
M=-1
(END_1)
// push constant 38
@38
D=A
@SP
AM=M+1
A=A-1
M=D
// push constant 12
@12
D=A
@SP
AM=M+1
A=A-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push constant 49
@49
D=A
@SP
AM=M+1
A=A-1
M=D
// gt
@SP
AM=M-1
D=M
@NEG_Y_2
D;JLT
@SP
A=M-1
D=M
@NEG_X_POS_Y_2
D;JLT
@SP
A=M
D=M
A=A-1
D=M-D
@GREATER_2
D;JGT
@SMALLER_2
0;JMP
(NEG_Y_2)
@SP
A=M-1
D=M
@NEG_Y_POS_X_2
D;JGT
@SP
A=M
D=M
A=A-1
D=M-D
@GREATER_2
D;JLT
@SMALLER_2
0;JMP
(NEG_X_POS_Y_2)
@SMALLER_2
0;JMP
(NEG_Y_POS_X_2)
@GREATER_2
0;JMP
(GREATER_2)
@SP
A=M-1
M=-1
@END_2
0;JMP
(SMALLER_2)
@SP
A=M-1
M=0
(END_2)
// push constant 2
@2
D=A
@SP
AM=M+1
A=A-1
M=D
// neg
@SP
A=M-1
M=-M
// push constant 2
@2
D=A
@SP
AM=M+1
A=A-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push constant 0
@0
D=A
@SP
AM=M+1
A=A-1
M=D
// eq
@SP
AM=M-1
D=M
@NEG_Y_3
D;JLT
@SP
A=M-1
D=M
@NEG_X_POS_Y_3
D;JLT
@SP
A=M
D=M
A=A-1
D=M-D
@EQUAL_3
D;JEQ
@NOT_EQUAL_3
0;JMP
(NEG_Y_3)
@SP
A=M-1
D=M
@NEG_Y_POS_X_3
D;JGT
@SP
A=M
D=M
A=A-1
D=M-D
@EQUAL_3
D;JEQ
@NOT_EQUAL_3
0;JMP
(NEG_X_POS_Y_3)
@NOT_EQUAL_3
0;JMP
(NEG_Y_POS_X_3)
@NOT_EQUAL_3
0;JMP
(EQUAL_3)
@SP
A=M-1
M=-1
@END_3
0;JMP
(NOT_EQUAL_3)
@SP
A=M-1
M=0
(END_3)
// push constant 4
@4
D=A
@SP
AM=M+1
A=A-1
M=D
// push constant 2
@2
D=A
@SP
AM=M+1
A=A-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// eq
@SP
AM=M-1
D=M
@NEG_Y_4
D;JLT
@SP
A=M-1
D=M
@NEG_X_POS_Y_4
D;JLT
@SP
A=M
D=M
A=A-1
D=M-D
@EQUAL_4
D;JEQ
@NOT_EQUAL_4
0;JMP
(NEG_Y_4)
@SP
A=M-1
D=M
@NEG_Y_POS_X_4
D;JGT
@SP
A=M
D=M
A=A-1
D=M-D
@EQUAL_4
D;JEQ
@NOT_EQUAL_4
0;JMP
(NEG_X_POS_Y_4)
@NOT_EQUAL_4
0;JMP
(NEG_Y_POS_X_4)
@NOT_EQUAL_4
0;JMP
(EQUAL_4)
@SP
A=M-1
M=-1
@END_4
0;JMP
(NOT_EQUAL_4)
@SP
A=M-1
M=0
(END_4)
// push constant 4
@4
D=A
@SP
AM=M+1
A=A-1
M=D
// push constant 2
@2
D=A
@SP
AM=M+1
A=A-1
M=D
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// gt
@SP
AM=M-1
D=M
@NEG_Y_5
D;JLT
@SP
A=M-1
D=M
@NEG_X_POS_Y_5
D;JLT
@SP
A=M
D=M
A=A-1
D=M-D
@GREATER_5
D;JGT
@SMALLER_5
0;JMP
(NEG_Y_5)
@SP
A=M-1
D=M
@NEG_Y_POS_X_5
D;JGT
@SP
A=M
D=M
A=A-1
D=M-D
@GREATER_5
D;JLT
@SMALLER_5
0;JMP
(NEG_X_POS_Y_5)
@SMALLER_5
0;JMP
(NEG_Y_POS_X_5)
@GREATER_5
0;JMP
(GREATER_5)
@SP
A=M-1
M=-1
@END_5
0;JMP
(SMALLER_5)
@SP
A=M-1
M=0
(END_5)
// push constant 5
@5
D=A
@SP
AM=M+1
A=A-1
M=D
// push constant 1
@1
D=A
@SP
AM=M+1
A=A-1
M=D
// lt
@SP
AM=M-1
D=M
@NEG_Y_6
D;JLT
@SP
A=M-1
D=M
@NEG_X_POS_Y_6
D;JLT
@SP
A=M
D=M
A=A-1
D=M-D
@LOWER_6
D;JLT
@GREATER_6
0;JMP
(NEG_Y_6)
@SP
A=M-1
D=M
@NEG_Y_POS_X_6
D;JGT
@SP
A=M
D=M
A=A-1
D=M-D
@LOWER_6
D;JGT
@GREATER_6
0;JMP
(NEG_X_POS_Y_6)
@LOWER_6
0;JMP
(NEG_Y_POS_X_6)
@GREATER_6
0;JMP
(GREATER_6)
@SP
A=M-1
M=0
@END_6
0;JMP
(LOWER_6)
@SP
A=M-1
M=-1
(END_6)
// push constant 0
@0
D=A
@SP
AM=M+1
A=A-1
M=D
// not
@SP
A=M-1
M=!M
// push constant 1
@1
D=A
@SP
AM=M+1
A=A-1
M=D
// neg
@SP
A=M-1
M=-M
// and
@SP
AM=M-1
D=M
A=A-1
D=M&D
@SP
A=M-1
M=D
// push constant 1
@1
D=A
@SP
AM=M+1
A=A-1
M=D
// add
@SP
AM=M-1
D=M
A=A-1
M=D+M
// push constant 0
@0
D=A
@SP
AM=M+1
A=A-1
M=D
// eq
@SP
AM=M-1
D=M
@NEG_Y_7
D;JLT
@SP
A=M-1
D=M
@NEG_X_POS_Y_7
D;JLT
@SP
A=M
D=M
A=A-1
D=M-D
@EQUAL_7
D;JEQ
@NOT_EQUAL_7
0;JMP
(NEG_Y_7)
@SP
A=M-1
D=M
@NEG_Y_POS_X_7
D;JGT
@SP
A=M
D=M
A=A-1
D=M-D
@EQUAL_7
D;JEQ
@NOT_EQUAL_7
0;JMP
(NEG_X_POS_Y_7)
@NOT_EQUAL_7
0;JMP
(NEG_Y_POS_X_7)
@NOT_EQUAL_7
0;JMP
(EQUAL_7)
@SP
A=M-1
M=-1
@END_7
0;JMP
(NOT_EQUAL_7)
@SP
A=M-1
M=0
(END_7)
// push constant 0
@0
D=A
@SP
AM=M+1
A=A-1
M=D
// push constant 1
@1
D=A
@SP
AM=M+1
A=A-1
M=D
// neg
@SP
A=M-1
M=-M
// or
@SP
AM=M-1
D=M
A=A-1
D=M|D
@SP
A=M-1
M=D
// push constant 17
@17
D=A
@SP
AM=M+1
A=A-1
M=D
// pop argument 0
@0
D=A
@ARG
D=M+D
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// push argument 0
@0
D=A
@ARG
D=M+D
A=D
D=M
@SP
AM=M+1
A=A-1
M=D
// pop local 0
@0
D=A
@LCL
D=M+D
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// push local 0
@0
D=A
@LCL
D=M+D
A=D
D=M
@SP
AM=M+1
A=A-1
M=D
// pop static 2
@SP
AM=M-1
D=M
@VMTest.2
M=D
// push static 2
@VMTest.2
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 4000
@4000
D=A
@SP
AM=M+1
A=A-1
M=D
// pop pointer 0
@SP
AM=M-1
D=M
@THIS
M=D
// push constant 18
@18
D=A
@SP
AM=M+1
A=A-1
M=D
// pop this 0
@0
D=A
@THIS
D=M+D
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// push this 0
@0
D=A
@THIS
D=M+D
A=D
D=M
@SP
AM=M+1
A=A-1
M=D
// push constant 5000
@5000
D=A
@SP
AM=M+1
A=A-1
M=D
// pop pointer 1
@SP
AM=M-1
D=M
@THAT
M=D
// push constant 21
@21
D=A
@SP
AM=M+1
A=A-1
M=D
// pop that 0
@0
D=A
@THAT
D=M+D
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
// push that 0
@0
D=A
@THAT
D=M+D
A=D
D=M
@SP
AM=M+1
A=A-1
M=D
// push constant 22
@22
D=A
@SP
AM=M+1
A=A-1
M=D
// pop temp 3
@SP
AM=M-1
D=M
@8
M=D
// push temp 3
@8
D=M
@SP
AM=M+1
A=A-1
M=D
// push constant 30000
@30000
D=A
@SP
AM=M+1
A=A-1
M=D
// push constant 30000
@30000
D=A
@SP
AM=M+1
A=A-1
M=D
// neg
@SP
A=M-1
M=-M
// gt
@SP
AM=M-1
D=M
@NEG_Y_8
D;JLT
@SP
A=M-1
D=M
@NEG_X_POS_Y_8
D;JLT
@SP
A=M
D=M
A=A-1
D=M-D
@GREATER_8
D;JGT
@SMALLER_8
0;JMP
(NEG_Y_8)
@SP
A=M-1
D=M
@NEG_Y_POS_X_8
D;JGT
@SP
A=M
D=M
A=A-1
D=M-D
@GREATER_8
D;JLT
@SMALLER_8
0;JMP
(NEG_X_POS_Y_8)
@SMALLER_8
0;JMP
(NEG_Y_POS_X_8)
@GREATER_8
0;JMP
(GREATER_8)
@SP
A=M-1
M=-1
@END_8
0;JMP
(SMALLER_8)
@SP
A=M-1
M=0
(END_8)
// push constant 30000
@30000
D=A
@SP
AM=M+1
A=A-1
M=D
// push constant 30000
@30000
D=A
@SP
AM=M+1
A=A-1
M=D
// neg
@SP
A=M-1
M=-M
// sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
// push constant 0
@0
D=A
@SP
AM=M+1
A=A-1
M=D
// gt
@SP
AM=M-1
D=M
@NEG_Y_9
D;JLT
@SP
A=M-1
D=M
@NEG_X_POS_Y_9
D;JLT
@SP
A=M
D=M
A=A-1
D=M-D
@GREATER_9
D;JGT
@SMALLER_9
0;JMP
(NEG_Y_9)
@SP
A=M-1
D=M
@NEG_Y_POS_X_9
D;JGT
@SP
A=M
D=M
A=A-1
D=M-D
@GREATER_9
D;JLT
@SMALLER_9
0;JMP
(NEG_X_POS_Y_9)
@SMALLER_9
0;JMP
(NEG_Y_POS_X_9)
@GREATER_9
0;JMP
(GREATER_9)
@SP
A=M-1
M=-1
@END_9
0;JMP
(SMALLER_9)
@SP
A=M-1
M=0
(END_9)
