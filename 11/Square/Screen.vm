function Screen.init 2
push constant 0
not
pop static 1
push constant 16384
pop static 2
push constant 16
call Array.new 1
pop static 0
push constant 1
pop local 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push constant 16
lt
not
if-goto WHILE_END0
push local 1
push static 0
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push local 0
add
pop local 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.clearScreen 2
push static 2
pop local 0
push constant 24576
pop local 1
label WHILE_EXP0
push local 0
push local 1
lt
not
if-goto WHILE_END0
push local 0
push constant 0
call Memory.poke 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.setColor 0
push argument 0
pop static 1
push constant 0
return
function Screen.getRegisterAdd 4
push constant 0
pop local 0
push argument 1
pop local 1
label WHILE_EXP0
push local 0
push constant 5
lt
not
if-goto WHILE_END0
push local 1
push local 1
add
pop local 1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop local 0
push argument 0
pop local 2
label WHILE_EXP1
push local 0
push constant 4
lt
not
if-goto WHILE_END1
push local 2
call Math.shiftRight 1
pop local 2
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push local 1
push local 2
add
return
function Screen.drawPixel 3
push argument 0
push argument 1
call Screen.getRegisterAdd 2
pop local 0
push static 2
push local 0
add
call Memory.peek 1
pop local 1
push argument 0
push constant 15
and
pop local 2
push static 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push local 2
push static 0
add
pop pointer 1
push that 0
or
pop local 1
goto IF_END0
label IF_FALSE0
push local 1
push local 2
push static 0
add
pop pointer 1
push that 0
not
and
pop local 1
label IF_END0
push static 2
push local 0
add
push local 1
call Memory.poke 2
pop temp 0
push constant 0
return
function Screen.colorReg 1
push static 2
push argument 0
add
call Memory.peek 1
pop local 0
push static 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push argument 1
or
pop local 0
goto IF_END0
label IF_FALSE0
push local 0
push argument 1
not
and
pop local 0
label IF_END0
push static 2
push argument 0
add
push local 0
call Memory.poke 2
pop temp 0
push constant 0
return
function Screen.drawHorizontalLine 10
push argument 0
push argument 1
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
pop local 2
push argument 1
pop local 3
goto IF_END0
label IF_FALSE0
push argument 1
pop local 2
push argument 0
pop local 3
label IF_END0
push static 1
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
neg
pop local 9
goto IF_END1
label IF_FALSE1
push constant 0
pop local 9
label IF_END1
push local 2
push argument 2
call Screen.getRegisterAdd 2
pop local 0
push local 3
push argument 2
call Screen.getRegisterAdd 2
pop local 1
push local 0
push local 1
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 3
push local 2
sub
pop local 7
push local 7
push constant 1
add
push static 0
add
pop pointer 1
push that 0
push constant 1
sub
pop local 4
push constant 0
pop local 5
push local 2
push constant 15
and
pop local 8
label WHILE_EXP0
push local 5
push local 8
lt
not
if-goto WHILE_END0
push local 4
push local 4
add
pop local 4
push local 5
push constant 1
add
pop local 5
goto WHILE_EXP0
label WHILE_END0
push local 0
push local 4
call Screen.colorReg 2
pop temp 0
goto IF_END2
label IF_FALSE2
push local 2
push constant 15
and
pop local 8
push local 8
push static 0
add
pop pointer 1
push that 0
push constant 1
sub
not
pop local 4
push local 0
push local 4
call Screen.colorReg 2
pop temp 0
push local 0
push constant 1
add
pop local 0
label WHILE_EXP1
push local 0
push local 1
lt
not
if-goto WHILE_END1
push static 2
push local 0
add
push local 9
call Memory.poke 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push local 3
push constant 15
and
pop local 8
push local 8
push constant 15
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 1
neg
pop local 4
goto IF_END3
label IF_FALSE3
push local 8
push constant 1
add
push static 0
add
pop pointer 1
push that 0
push constant 1
sub
pop local 4
label IF_END3
push local 1
push local 4
call Screen.colorReg 2
pop temp 0
label IF_END2
push constant 0
return
function Screen.drawVerticalLine 2
push argument 1
push argument 2
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
pop local 0
push argument 2
pop local 1
goto IF_END0
label IF_FALSE0
push argument 2
pop local 0
push argument 1
pop local 1
label IF_END0
label WHILE_EXP0
push local 0
push local 1
gt
not
not
if-goto WHILE_END0
push argument 0
push local 0
call Screen.drawPixel 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawDiagonalLine 7
push argument 0
pop local 0
push argument 1
pop local 1
push argument 2
push argument 0
sub
pop local 2
push argument 3
push argument 1
sub
call Math.abs 1
pop local 3
push constant 0
pop local 4
push constant 0
pop local 5
push constant 0
pop local 6
label WHILE_EXP0
push local 4
push local 2
gt
not
push local 5
push local 3
gt
not
and
not
if-goto WHILE_END0
push local 0
push local 4
add
push local 1
push local 5
add
call Screen.drawPixel 2
pop temp 0
push local 6
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 4
push constant 1
add
pop local 4
push local 6
push local 3
add
pop local 6
goto IF_END0
label IF_FALSE0
push argument 4
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 5
push constant 1
add
pop local 5
push local 6
push local 2
sub
pop local 6
goto IF_END1
label IF_FALSE1
push local 5
push constant 1
sub
pop local 5
push local 6
push local 2
sub
pop local 6
label IF_END1
label IF_END0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawLine 0
push argument 1
push argument 3
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push argument 2
push argument 1
call Screen.drawHorizontalLine 3
pop temp 0
push constant 0
return
label IF_FALSE0
push argument 0
push argument 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 0
push argument 1
push argument 3
call Screen.drawVerticalLine 3
pop temp 0
push constant 0
return
label IF_FALSE1
push argument 0
push argument 2
lt
push argument 1
push argument 3
lt
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 0
push argument 1
push argument 2
push argument 3
push constant 0
not
call Screen.drawDiagonalLine 5
pop temp 0
push constant 0
return
label IF_FALSE2
push argument 0
push argument 2
gt
push argument 1
push argument 3
gt
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push argument 2
push argument 3
push argument 0
push argument 1
push constant 0
not
call Screen.drawDiagonalLine 5
pop temp 0
push constant 0
return
label IF_FALSE3
push argument 2
push argument 0
gt
push argument 3
push argument 1
lt
and
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push argument 0
push argument 1
push argument 2
push argument 3
push constant 0
call Screen.drawDiagonalLine 5
pop temp 0
push constant 0
return
label IF_FALSE4
push argument 2
push argument 3
push argument 0
push argument 1
push constant 0
call Screen.drawDiagonalLine 5
pop temp 0
push constant 0
return
function Screen.drawRectangle 1
push argument 1
pop local 0
label WHILE_EXP0
push local 0
push argument 3
gt
not
not
if-goto WHILE_END0
push argument 0
push argument 2
push local 0
call Screen.drawHorizontalLine 3
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawCircle 3
push argument 2
neg
pop local 0
push argument 2
push argument 2
call Math.multiply 2
pop local 2
label WHILE_EXP0
push local 0
push argument 2
gt
not
not
if-goto WHILE_END0
push local 2
push local 0
push local 0
call Math.multiply 2
sub
call Math.sqrt 1
pop local 1
push argument 0
push local 1
sub
push argument 0
push local 1
add
push argument 1
push local 0
add
call Screen.drawHorizontalLine 3
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
